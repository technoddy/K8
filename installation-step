How to install K8s

Kubeadm method:

1> Create VM Which are part of K8s cluster
2> Disable SELinux and Swap on all nodes

swapoff -a
setenforce 0
sed -i 's/enforcing/disabled/g' /etc/selinux/config
grep disabled /etc/selinux/config | grep -v '#'



3> Install Kubeadm, Kubelet, Kubectl and Docker on all nodes.
install docker :

yum update -y
yum install -y docker
systemctl start docker
systemctl enable docker
systemctl status docker

install Kubeadm, Kubelet, Kubectl :

add kubernetes repo:

cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kube*
EOF

yum install -y kubeadm kubelet kubectl --disableexclude=kubernetes
systemctl enable kubelet && systemctl start kubelet


cat <<EOF >  /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

echo 1 > /proc/sys/net/ipv4/ip_forward

// sysctl --system


4> Initialize master node.
For master :
kubeadm init --pod-network-cidr=10.240.0.0/16

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config


5> Configure Pod Network.
To communicate pods with each other set network using network plugin

kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml

kubectl get pods --all-namespaces


6> Join Worker node to the cluster.

### use your command from log
kubeadm join 10.142.0.4:6443 --token inb7lm.5rcex5dpdnut8y20 \
    --discovery-token-ca-cert-hash sha256:75c4b65e8bf8a46f6675ea80a68dd84e2427c7fcfbbf53724076b7aa23768ad1 


kubeadm token create --print-join-command 

7> final check

kubectl get no


8> check by sample app  running on master
kubectl run kubernetes-bootcamp --image=gcr.io/google-samples/kubernetes-bootcamp:v1 --port=8080
